/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id("java-conventions")
    id("lombok-conventions")
}

dependencies {
    compileOnly(project(":jdbc-grpc"))

    api(libs.com.fasterxml.jackson.core.jackson.databind)
    api(libs.com.google.guava)
    api(libs.com.squareup.okhttp3.okhttp)
    api(libs.io.jsonwebtoken.jjwt.api)
    api(libs.javax.annotation.javax.annotation.api)
    api(libs.failsafe)
    api(libs.apache.arrow.vector)
    api(libs.apache.calcite.avatica.avatica)
    api(libs.apache.commons.commons.lang3)
    api(libs.slf4j.api)

    runtimeOnly(libs.io.jsonwebtoken.jjwt.impl)
    runtimeOnly(libs.io.jsonwebtoken.jjwt.jackson)
    runtimeOnly(libs.apache.arrow.memory.netty)

    testImplementation(platform(libs.junit.bom))
    testImplementation(libs.junit.jupiter.api)
    testImplementation(libs.junit.jupiter.engine)
    testImplementation(libs.junit.jupiter.params)
    testImplementation(libs.junit.platform.launcher)
    testImplementation(libs.assertj)
    testImplementation(libs.grpcmock)
    testImplementation(libs.com.squareup.okhttp3.mockwebserver)
    testImplementation(libs.mockito.inline)
    testImplementation(libs.mockito.junit.jupiter)
    testImplementation(libs.slf4j.simple)
}

description = "jdbc-core"

java {
    withJavadocJar()
}
