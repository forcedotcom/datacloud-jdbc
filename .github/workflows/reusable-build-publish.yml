name: Reusable Build and Publish

on:
  workflow_call:
    inputs:
      publish:
        required: true
        type: boolean
        description: 'Whether to publish or not'
      version:
        required: false
        type: string
        description: 'Version to publish (tag name or snapshot)'
        default: ''
    secrets:
      signing_pass:
        required: false
      signing_key:
        required: false
      publish_user:
        required: false
      publish_pass:
        required: false

env:
  GRADLE_VERSION: "8.12"

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      hyper_version: ${{ steps.get_version.outputs.hyper_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Get hyperd version
        id: get_version
        run: |
          HYPER_VERSION=$(sed -n 's/^hyperApiVersion=\(.*\)/\1/p' gradle.properties)
          echo "hyper_version=$HYPER_VERSION" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - run: git fetch --no-tags --depth=1 origin main
      - name: Setup Java with 8 and 17 toolchains
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: |
            8
            17
      - name: Cache hyperd zip
        uses: actions/cache@v3
        with:
          path: .hyper/hyper-${{ needs.prepare.outputs.hyper_version }}.zip
          key: ${{ runner.os }}-hyper-${{ needs.prepare.outputs.hyper_version }}
          restore-keys: ${{ runner.os }}-hyper-${{ needs.prepare.outputs.hyper_version }}
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          dependency-graph: generate-and-submit
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"
          gradle-version: ${{ env.GRADLE_VERSION }}
      - name: Extract Hyper
        id: extract_hyper
        run: ./gradlew extractHyper
      - name: Gradle build (with version)
        id: build-and-test
        run: |
          echo "build and test with version='${{ inputs.version }}'"
          ./gradlew clean build --no-build-cache --rerun-tasks
        env:
          RELEASE_VERSION: ${{ inputs.version }}
      - name: Look at files in verification
        if: ${{ failure() }}
        uses: jaywcjlove/github-action-folder-tree@main
        with:
          path: .
          exclude: ".gradle|build|bin|.git"
          depth: 3
      - name: Upload hyper logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}
          path: |
            build/hyperd/*.log
          retention-days: 5

  publish:
    needs: [ prepare, build ]
    if: ${{ inputs.publish }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - run: git fetch --no-tags --depth=1 origin main
      - name: Setup Java with 8 and 17 toolchains
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: |
            8
            17
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}
      - name: Publish to Maven Central
        env:
          RELEASE_VERSION: ${{ inputs.version }}
          OSSRH_USERNAME: ${{ secrets.publish_user }}
          OSSRH_PASSWORD: ${{ secrets.publish_pass }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.signing_key }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.signing_pass }}
        run: ./gradlew publishAllPublicationsToCentralPortal -x test
